name: CI
on:
  push:
    branches:
      - main
    tags-ignore:
      - '**'

jobs:
  main:
    name: Nx Cloud - Lint, test and build in parallel
    uses: nrwl/ci/.github/workflows/nx-cloud-main.yml@v0.13.0
    with:
      number-of-agents: 3
      parallel-commands: |
        npx nx-cloud record -- npx nx format:check
      parallel-commands-on-agents: |
        npx nx affected -t lint --parallel=3
        npx nx affected -t test --parallel=3 --configuration=ci
        npx nx affected -t build --parallel=3
      artifacts-path: dist
      artifacts-name: dist

  agents:
    name: Nx Cloud - Agents
    uses: nrwl/ci/.github/workflows/nx-cloud-agents.yml@v0.13.0
    with:
      number-of-agents: 3

  publish-forms:
    needs: ['main']
    name: Publish forms package to NPM
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        name: Setup Node.js
        with:
          node-version: '20'
      - uses: actions/download-artifact@v3
        name: Download artifacts
        with:
          name: dist
          path: dist
      - uses: JS-DevTools/npm-publish@v2
        with:
          package: dist/packages/forms
          token: ${{ secrets.NPM_TOKEN }}
      - name: Bump version
        run: |
          cd packages/forms
          yarn version --patch

  publish-utils:
    needs: ['main']
    name: Publish utils package to NPM
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-node@v3
        name: Setup Node.js
        with:
          node-version: '20'
      - uses: actions/download-artifact@v3
        name: Download artifacts
        with:
          name: dist
          path: dist
      - uses: JS-DevTools/npm-publish@v2
        with:
          package: dist/packages/utils
          token: ${{ secrets.NPM_TOKEN }}
      - name: Bump version
        run: |
          cd packages/utils
          yarn version --patch

  deploy-demo:
    needs: ['main']
    runs-on: ubuntu-latest
    name: Deploy forms-demo to GitHub pages
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - uses: actions/download-artifact@v3
        name: Download artifacts
        with:
          name: dist
      - name: Set base href
        run: |
          sed -i.bak 's/base href="\/"/base href="\/plume\/"/' packages/forms-demo/index.html
      - name: Compress artifact
        run: |
          cp -r packages/forms-demo ./_site
          tar -czvf github-pages.tar.gz ./_site
      - uses: actions/upload-pages-artifact@v2
        name: Upload GitHub pages artifact
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
